apply plugin: 'com.android.application'
apply plugin: 'com.vanniktech.android.junit.jacoco'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def properties = new Properties()

if (rootProject.file('local.properties').exists()) {
	properties.load(rootProject.file('local.properties').newDataInputStream())
}

android {
	compileSdkVersion rootProject.compileSdkVersion
	buildToolsVersion rootProject.buildToolsVersion

	defaultConfig {
		applicationId 'io.crypto.bitstamp'
		minSdkVersion rootProject.minSdkVersion
		targetSdkVersion rootProject.targetSdkVersion
		versionCode rootProject.versionCode
		versionName rootProject.versionName
		resConfigs 'en'
		testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

		buildConfigField "String", "PUSHER_API_KEY", properties.getProperty("pusher.api_key", "\"\"")
	}

	buildTypes {
		debug {
			testCoverageEnabled true
			postprocessing {
				removeUnusedCode false
				removeUnusedResources false
				obfuscate false
				optimizeCode false
				proguardFiles 'proguard-rules.pro'
			}
		}

		release {
			postprocessing {
				removeUnusedCode true
				removeUnusedResources true
				obfuscate true
				optimizeCode true
				proguardFiles 'proguard-rules.pro'
			}
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}

	sourceSets {
		androidTest.java.srcDirs = ['src/androidTest/kotlin']
		main.java.srcDirs = ['src/main/kotlin']
		test.java.srcDirs = ['src/test/kotlin']
	}
}

androidExtensions {
	experimental = true
}

junitJacoco {
	jacocoVersion = '0.7.9'
	includeNoLocationClasses = true
}

kotlin {
	experimental {
		coroutines 'enable'
	}
}

dependencies {
	implementation "com.android.support:design:$supportLibraryVersion"
	implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
	implementation "com.pusher:pusher-java-client:$pusherVersion"
	implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
	implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
	implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
	implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

	testImplementation "com.squareup.assertj:assertj-android:$assertJAndroidVersion"
	testImplementation "junit:junit:$jUnitVersion"
	testImplementation "org.json:json:$jsonVersion"

	androidTestImplementation "com.android.support.test:runner:$testSupportLibraryVersion"
	androidTestImplementation "com.android.support.test:rules:$testSupportLibraryVersion"
	androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
	androidTestImplementation "com.squareup.assertj:assertj-android:$assertJAndroidVersion"
	androidTestImplementation "junit:junit:$jUnitVersion"
}
